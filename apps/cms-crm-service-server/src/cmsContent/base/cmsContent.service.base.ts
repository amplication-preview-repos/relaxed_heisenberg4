/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CmsContent as PrismaCmsContent,
  Language as PrismaLanguage,
} from "@prisma/client";

export class CmsContentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CmsContentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cmsContent.count(args);
  }

  async cmsContents(
    args: Prisma.CmsContentFindManyArgs
  ): Promise<PrismaCmsContent[]> {
    return this.prisma.cmsContent.findMany(args);
  }
  async cmsContent(
    args: Prisma.CmsContentFindUniqueArgs
  ): Promise<PrismaCmsContent | null> {
    return this.prisma.cmsContent.findUnique(args);
  }
  async createCmsContent(
    args: Prisma.CmsContentCreateArgs
  ): Promise<PrismaCmsContent> {
    return this.prisma.cmsContent.create(args);
  }
  async updateCmsContent(
    args: Prisma.CmsContentUpdateArgs
  ): Promise<PrismaCmsContent> {
    return this.prisma.cmsContent.update(args);
  }
  async deleteCmsContent(
    args: Prisma.CmsContentDeleteArgs
  ): Promise<PrismaCmsContent> {
    return this.prisma.cmsContent.delete(args);
  }

  async getLanguage(parentId: string): Promise<PrismaLanguage | null> {
    return this.prisma.cmsContent
      .findUnique({
        where: { id: parentId },
      })
      .language();
  }
}
